// home_page.dart
import 'package:flutter/material.dart';
import 'seat_page.dart';
import 'station_list_page.dart';
class HomePage extends StatefulWidget {
  const HomePage({super.key});
  @override
  State<HomePage> createState() => _HomePageState();
}class _HomePageState extends State<HomePage> {
  String? departure;
  String? arrival;
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey[200],
      appBar: AppBar(
        centerTitle: true,
        backgroundColor: Colors.white,
        elevation: 0,
        title: const Text('기차 예매', style: TextStyle(color: Colors.black)),
        iconTheme: const IconThemeData(color: Colors.black),
      ),
      body: Padding(
        padding: const EdgeInsets.all(20),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Container(
              height: 200,
              decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.circular(20),
              ),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: [
                  GestureDetector(
                    onTap: () async {
                      final selected = await Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => const StationListPage(isDeparture: true),
                        ),
                      );
                      if (selected != null) {
                        setState(() {
                          departure = selected;
                        });
                      }
                    },
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        const Text("출발역", style: TextStyle(fontSize: 16, color: Colors.grey, fontWeight: FontWeight.bold)),
                        const SizedBox(height: 10),
                        Text(departure ?? '선택', style: const TextStyle(fontSize: 40)),
                      ],
                    ),
                  ),
                  Container(
                    width: 2,
                    height: 50,
                    color: Colors.grey[400],
                  ),
                  GestureDetector(
                    onTap: () async {
                      final selected = await Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => const StationListPage(isDeparture: false),
                        ),
                      );
                      if (selected != null) {
                        setState(() {
                          arrival = selected;
                        });
                      }
                    },
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        const Text("도착역", style: TextStyle(fontSize: 16, color: Colors.grey, fontWeight: FontWeight.bold)),
                        const SizedBox(height: 10),
                        Text(arrival ?? '선택', style: const TextStyle(fontSize: 40)),
                      ],
                    ),
                  ),
                ],
              ),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: (departure != null && arrival != null)
                  ? () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => SeatPage(
                            departure: departure!,
                            arrival: arrival!,
                          ),
                        ),
                      );
                    }
                  : null,
              style: ElevatedButton.styleFrom(
                padding: const EdgeInsets.symmetric(horizontal: 60, vertical: 16),
              ),
              child: const Text('좌석 선택'),
            ),
          ],
        ),
      ),
    );
  }
}



// station_list_page.dart
import 'package:flutter/material.dart';
class StationListPage extends StatelessWidget {
  final bool isDeparture;
  const StationListPage({super.key, required this.isDeparture});
  static const List<String> stations = [
    "수서", "동탄", "평택지제", "천안아산", "오송",
    "대전", "김천구미", "동대구", "경주", "울산", "부산"
  ];
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        centerTitle: true,
        backgroundColor: Colors.white,
        elevation: 0,
        title: Text(isDeparture ? "출발역" : "도착역"),
        leading: IconButton(
          icon: const Icon(Icons.arrow_back),
          onPressed: () => Navigator.pop(context),
        ),
      ),
      body: ListView.separated(
        itemCount: stations.length,
        separatorBuilder: (context, index) => const Divider(height: 1),
        itemBuilder: (context, index) {
          String station = stations[index];
          return ListTile(
            title: Text(station),
            onTap: () => Navigator.pop(context, station),
          );
        },
      ),
    );
  }
}




// seat_page.dart
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
class SeatPage extends StatefulWidget {
  final String departure;
  final String arrival;
  const SeatPage({super.key, required this.departure, required this.arrival});
  @override
  State<SeatPage> createState() => _SeatPageState();
}class _SeatPageState extends State<SeatPage> {
  int? selectedRow;
  String? selectedCol;
  final List<String> columns = ['A', 'B', 'C', 'D'];
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        centerTitle: true,
        backgroundColor: Colors.white,
        elevation: 0,
        title: const Text("좌석 선택", style: TextStyle(color: Colors.black)),
        iconTheme: const IconThemeData(color: Colors.black),
      ),
      body: Column(
        children: [
          const SizedBox(height: 16),
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(widget.departure,
                  style: const TextStyle(color: Colors.purple, fontWeight: FontWeight.bold, fontSize: 30)),
              const SizedBox(width: 8),
              const Icon(Icons.arrow_forward_ios, size: 20),
              const SizedBox(width: 8),
              Text(widget.arrival,
                  style: const TextStyle(color: Colors.purple, fontWeight: FontWeight.bold, fontSize: 30)),
            ],
          ),
          const SizedBox(height: 16),
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              _seatStateBox(Colors.purple, "선택됨"),
              const SizedBox(width: 20),
              _seatStateBox(Colors.grey[300]!, "선택안됨"),
            ],
          ),
          const SizedBox(height: 16),
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const SizedBox(width: 58),
              ...columns.map((col) => Container(
                    width: 50,
                    height: 50,
                    alignment: Alignment.center,
                    child: Text(col, style: const TextStyle(fontSize: 18)),
                  )),
            ],
          ),
          Expanded(
            child: ListView.builder(
              padding: const EdgeInsets.symmetric(vertical: 10),
              itemCount: 20,
              itemBuilder: (context, index) {
                int row = index + 1;
                return Padding(
                  padding: const EdgeInsets.symmetric(vertical: 4),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Container(
                        width: 50,
                        height: 50,
                        alignment: Alignment.center,
                        child: Text('$row', style: const TextStyle(fontSize: 18)),
                      ),
                      const SizedBox(width: 8),
                      ...columns.map((col) {
                        bool isSelected = selectedRow == row && selectedCol == col;
                        return Padding(
                          padding: const EdgeInsets.symmetric(horizontal: 2),
                          child: GestureDetector(
                            onTap: () {
                              setState(() {
                                selectedRow = row;
                                selectedCol = col;
                              });
                            },
                            child: Container(
                              width: 50,
                              height: 50,
                              decoration: BoxDecoration(
                                color: isSelected ? Colors.purple : Colors.grey[300],
                                borderRadius: BorderRadius.circular(8),
                              ),
                            ),
                          ),
                        );
                      }).toList(),
                    ],
                  ),
                );
              },
            ),
          ),
          const SizedBox(height: 10),
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 40),
            child: ElevatedButton(
              onPressed: (selectedRow != null && selectedCol != null)
                  ? () {
                      showCupertinoDialog(
                        context: context,
                        builder: (context) => CupertinoAlertDialog(
                          title: const Text("예매 하시겠습니까?"),
                          content: Text("좌석 : $selectedRow-$selectedCol"),
                          actions: [
                            CupertinoDialogAction(
                              child: const Text("취소"),
                              onPressed: () => Navigator.pop(context),
                            ),
                            CupertinoDialogAction(
                              child: const Text("확인"),
                              isDefaultAction: true,
                              onPressed: () {
                                Navigator.pop(context);
                                Navigator.pop(context);
                                Navigator.pop(context);
                              },
                            ),
                          ],
                        ),
                      );
                    }
                  : null,
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.purple,
                padding: const EdgeInsets.symmetric(vertical: 16),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(20),
                ),
              ),
              child: const Text(
                "예매 하기",
                style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold, color: Colors.white),
              ),
            ),
          ),
          const SizedBox(height: 20),
        ],
      ),
    );
  }
  Widget _seatStateBox(Color color, String label) {
    return Row(
      children: [
        Container(
          width: 24,
          height: 24,
          decoration: BoxDecoration(
            color: color,
            borderRadius: BorderRadius.circular(8),
          ),
        ),
        const SizedBox(width: 4),
        Text(label),
      ],
    );
  }
}



